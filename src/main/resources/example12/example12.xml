<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <batch:job id="example12Job">
        <batch:step id="readFromFile" next="splitIntoCitations">
            <batch:tasklet>
                <batch:chunk reader="plainFileReader"
                             processor="filteringIdentityStringProcessor"
                             writer="jdbcStringItemWriter"
                             commit-interval="10" />
            </batch:tasklet>

            <batch:listeners>
                <batch:listener ref="stepExecutionListener" />
            </batch:listeners>
        </batch:step>

        <batch:step id="splitIntoCitations" next="readAndConvertToXmlAndCsv">
            <batch:tasklet transaction-manager="hibernateTransactionManager">
                <batch:chunk reader="jdbcCitationReader"
                             processor="citationTextExtractor"
                             writer="hibernateCitationWriter"
                             commit-interval="10" />
            </batch:tasklet>

            <batch:listeners>
                <batch:listener ref="stepExecutionListener" />
            </batch:listeners>
        </batch:step>

        <batch:split id="readAndConvertToXmlAndCsv">
            <batch:flow>
                <batch:step id="toXmlConversion">
                    <batch:tasklet>
                        <batch:chunk reader="hibernateCitationReader"
                                     processor="identityCitationProcessor"
                                     writer="xmlWriter"
                                     commit-interval="10" />
                    </batch:tasklet>

                    <batch:listeners>
                        <batch:listener ref="stepExecutionListener" />
                    </batch:listeners>
                </batch:step>
            </batch:flow>

            <batch:flow>
                <batch:step id="toCsvConversion">
                    <batch:tasklet>
                        <batch:chunk reader="hibernateCitationReader"
                                     processor="identityCitationProcessor"
                                     writer="csvWriter"
                                     commit-interval="10" />
                    </batch:tasklet>

                    <batch:listeners>
                        <batch:listener ref="stepExecutionListener" />
                    </batch:listeners>
                </batch:step>
            </batch:flow>
        </batch:split>
    </batch:job>

    <!-- Step 1 Beans -->
    <bean id="plainFileReader"
          init-method="init"
          class="com.epam.techtalk.spring.batch.example01.FileStringReader" />

    <bean id="filteringIdentityStringProcessor"
          scope="step"
          class="com.epam.techtalk.spring.batch.example12.FilteringIdentityStringProcessor">
        <property name="heroNames" value="#{jobParameters[HeroNames]}" />
    </bean>

    <bean id="jdbcStringItemWriter"
          class="com.epam.techtalk.spring.batch.example05.JdbcItemWriter">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>


    <!-- Step 2 Beans -->
    <bean id="jdbcCitationReader"
          class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="sql" value="SELECT * FROM quotes_table" />
        <property name="rowMapper">
            <bean class="com.epam.techtalk.spring.batch.example05.JdbcCitationMapper" />
        </property>
    </bean>

    <bean id="citationTextExtractor"
          class="com.epam.techtalk.spring.batch.example05.CitationTextAndAuthorExtractor" />

    <bean id="hibernateCitationWriter"
          class="org.springframework.batch.item.database.HibernateItemWriter">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>


    <!-- Step 3 Beans -->
    <bean id="hibernateCitationReader"
          class="org.springframework.batch.item.database.HibernatePagingItemReader">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="queryString" value="FROM Citation" />
    </bean>

    <bean id="identityCitationProcessor"
          class="com.epam.techtalk.spring.batch.example12.IdentityCitationProcessor" />

    <bean id="csvWriter"
          class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" value="file:output/example12.csv" />
        <property name="lineAggregator">
            <bean class="com.epam.techtalk.spring.batch.example10.CsvLineAggregator" />
        </property>
    </bean>

    <bean id="xmlWriter"
          class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:output/example12.xml" />
        <property name="marshaller">
            <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                <property name="aliases">
                    <map>
                        <entry key="citation"
                               value="com.epam.techtalk.spring.batch.example05.Citation" />
                    </map>
                </property>
            </bean>
        </property>
        <property name="rootTagName" value="citations" />
        <property name="overwriteOutput" value="true" />
    </bean>

    <!-- Listeners -->
    <bean id="stepExecutionListener"
          class="com.epam.techtalk.spring.batch.example12.CustomStepExecutionListener" />


    <!-- Infrastructure beans -->
    <import resource="classpath:datasource-context.xml" />

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="databaseType" value="MySQL" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>
</beans>