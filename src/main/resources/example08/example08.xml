<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <batch:job id="example08Job">
        <batch:listeners>
            <batch:listener ref="jobListener" />
        </batch:listeners>

        <batch:step id="step1" next="step2">
            <batch:tasklet>
                <batch:chunk reader="itemReader"
                             processor="itemProcessor"
                             writer="jdbcItemWriter"
                             commit-interval="10" />

                <batch:listeners>
                    <batch:listener ref="stepListener" />
                    <batch:listener ref="chunkListener" />
                    <batch:listener ref="readerListener" />
                </batch:listeners>
            </batch:tasklet>
        </batch:step>

        <batch:step id="step2">
            <batch:tasklet transaction-manager="hibernateTransactionManager">
                <batch:chunk reader="jdbcCitationReader"
                             processor="citationTextAndAuthorExtractor"
                             writer="hibernateCitationWriter"
                             commit-interval="3"/>

                <batch:listeners>
                    <batch:listener ref="stepListener" />
                    <batch:listener ref="processorListener" />
                    <batch:listener ref="writerListener" />
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="jobListener"
          class="com.epam.techtalk.spring.batch.example08.CustomJobListener" />

    <bean id="stepListener"
          class="com.epam.techtalk.spring.batch.example08.CustomStepListener" />

    <bean id="chunkListener"
          class="com.epam.techtalk.spring.batch.example08.CustomChunkListener" />

    <bean id="readerListener"
          class="com.epam.techtalk.spring.batch.example08.CustomItemReaderListener" />

    <bean id="processorListener"
          class="com.epam.techtalk.spring.batch.example08.CustomItemProcessorListener" />

    <bean id="writerListener"
          class="com.epam.techtalk.spring.batch.example08.CustomItemWriterListener" />






    <bean id="itemReader"
          init-method="init"
          class="com.epam.techtalk.spring.batch.example01.FileStringReader"></bean>

    <bean id="jdbcItemWriter"
          class="com.epam.techtalk.spring.batch.example05.JdbcItemWriter">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="itemProcessor"
          class="com.epam.techtalk.spring.batch.example01.FileStringProcessor"></bean>


    <bean id="jdbcCitationReader"
          class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="dataSource" />
        <property name="sql" value="select * from quotes_table" />
        <property name="rowMapper">
            <bean class="com.epam.techtalk.spring.batch.example05.JdbcCitationMapper" />
        </property>
    </bean>

    <bean id="citationTextAndAuthorExtractor"
          class="com.epam.techtalk.spring.batch.example05.CitationTextAndAuthorExtractor" />

    <bean id="hibernateCitationWriter"
          class="org.springframework.batch.item.database.HibernateItemWriter">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <import resource="classpath:datasource-context.xml" />

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="databaseType" value="MySQL" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>
</beans>